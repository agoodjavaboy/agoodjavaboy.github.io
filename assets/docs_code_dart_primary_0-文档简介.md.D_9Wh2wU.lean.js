import{_ as a,c as e,o as r,m as t,a as o}from"./chunks/framework.B33oykO0.js";const D=JSON.parse('{"title":"文档简介","description":"","frontmatter":{},"headers":[],"relativePath":"docs/code/dart/primary/0-文档简介.md","filePath":"docs/code/dart/primary/0-文档简介.md","lastUpdated":null}'),s={name:"docs/code/dart/primary/0-文档简介.md"},d=t("h1",{id:"文档简介",tabindex:"-1"},[o("文档简介 "),t("a",{class:"header-anchor",href:"#文档简介","aria-label":'Permalink to "文档简介"'},"​")],-1),n=t("p",null,"2024年3月13日开始正式学习Dart语言，但其实在一年前就已经知道这款语言了。因为之前公司用到APP开发，为了解决安卓系统和苹果系统应用兼容性的问题，急需一个可以同时发布两个安装包的开发方式，一个比较牛的移动端开发大佬刘航桤老师选择采用Flutter框架进行功能开发，从此开始接触到移动端开发。",-1),c=t("p",null,"Flutter只是一个开发框架，开发它需要Dart语言，根据刘老师介绍此语言在具备Java开发功底之后学习非常简单，所以本着技多不压身的想法，计划开始学习Dart后学习Flutter框架，并发布APP程序。",-1),i=t("p",null,"之前一直想复刻腾讯QQ这款软件，将其架构进行重新设计之后能够更好用更快速（当然美观我是肯定做不到的），并且接入我一直想做的游戏开发功能，想想自己做着玩还是有点意思的。其实这款软件的开发有很多种方式，要么使用纯安卓开发（采用Java或者Kotlin），苹果就要用到ObjectC开发，但是这个要学习两门语言，并且只能在特定平台上运行，感觉学习起来没有通用性，要是追求性价比的话，还是学一个能够同时多端发布的语言比较好。在开发生涯里也接触过uniapp这样的框架可以实现多端发布的能力，但是性能方面肯定没有接近原生的好，这样选择dart也许是最好的选择。",-1),l=t("p",null,"听说dart对于已经学过Java的人来说是很友好的，希望学习起来没有那么难。kotlin最近也发布了最新的特性，可以同时发布多端软件，但是这个框架还处在bate版本，所以还是老牌的dart可能更通用一些。当然我还在考虑如何在dart里面运行游戏环境，游戏的开发我现在更倾向pixi和threejs，这两个框架都是js语言的，更适合浏览器运行，相信如何dart能够嵌入浏览器引擎或者直接能够打开浏览器也能解决我这个问题。但是之前的时候刘老师是在dart里面嵌入了unity，毕竟游戏开发环境还是unity的天下，如果必要的情况下还可以学学unity，但是就要学习一门新语言就是C++，不过只要时间充裕，我还是很乐意的。",-1),_=t("p",null,"从现在开始爆破式的学习Dart语言，先追求最快的学习速度，再来整理笔记的格式。",-1),p=[d,n,c,i,l,_];function u(h,m,f,P,x,y){return r(),e("div",null,p)}const b=a(s,[["render",u]]);export{D as __pageData,b as default};
