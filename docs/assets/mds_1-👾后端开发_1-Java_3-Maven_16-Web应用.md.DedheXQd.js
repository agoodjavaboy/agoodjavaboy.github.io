import{_ as a,c as n,o as i,aF as p}from"./chunks/framework.CvyoTX4A.js";const e="/assets/web-project-structure.D5T55fK-.jpg",t="/assets/web-page.BH6QT7ks.jpg",o=JSON.parse('{"title":"16-Web 应用","description":"","frontmatter":{},"headers":[],"relativePath":"mds/1-👾后端开发/1-Java/3-Maven/16-Web应用.md","filePath":"mds/1-👾后端开发/1-Java/3-Maven/16-Web应用.md"}'),l={name:"mds/1-👾后端开发/1-Java/3-Maven/16-Web应用.md"};function h(k,s,r,c,E,d){return i(),n("div",null,s[0]||(s[0]=[p(`<h1 id="_16-web-应用" tabindex="-1">16-Web 应用 <a class="header-anchor" href="#_16-web-应用" aria-label="Permalink to &quot;16-Web 应用&quot;">​</a></h1><h2 id="maven-web-应用" tabindex="-1">Maven - Web 应用 <a class="header-anchor" href="#maven-web-应用" aria-label="Permalink to &quot;Maven - Web 应用&quot;">​</a></h2><p>本教程将指导你如何使用 Maven 版本控制系统来管理一个基于 Web 的工程。在此，你将学习到如何创建/构建/部署以及运行 Web 应用程序：</p><h2 id="创建-web-应用" tabindex="-1">创建 Web 应用 <a class="header-anchor" href="#创建-web-应用" aria-label="Permalink to &quot;创建 Web 应用&quot;">​</a></h2><p>建立一个简单的 Java web 应用，我们可以使用 maven-archetype-webapp 插件。首先我们打开命令控制台，进入 C:\\MVN 目录并且执行以下的 mvn 命令。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>C:\\MVN&gt;mvn archetype:generate </span></span>
<span class="line"><span>-DgroupId=com.companyname.automobile </span></span>
<span class="line"><span>-DartifactId=trucks</span></span>
<span class="line"><span>-DarchetypeArtifactId=maven-archetype-webapp </span></span>
<span class="line"><span>-DinteractiveMode=false</span></span></code></pre></div><p>Maven 将开始处理并且将创建完整的基于 Web 的 java 应用工程结构。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[INFO] Scanning for projects...</span></span>
<span class="line"><span>[INFO] Searching repository for plugin with prefix: &#39;archetype&#39;.</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Building Maven Default Project</span></span>
<span class="line"><span>[INFO]    task-segment: [archetype:generate] (aggregator-style)</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Preparing archetype:generate</span></span>
<span class="line"><span>[INFO] No goals needed for project - skipping</span></span>
<span class="line"><span>[INFO] [archetype:generate {execution: default-cli}]</span></span>
<span class="line"><span>[INFO] Generating project in Batch mode</span></span>
<span class="line"><span>[INFO] --------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Using following parameters for creating project </span></span>
<span class="line"><span>from Old (1.x) Archetype: maven-archetype-webapp:1.0</span></span>
<span class="line"><span>[INFO] --------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Parameter: groupId, Value: com.companyname.automobile</span></span>
<span class="line"><span>[INFO] Parameter: packageName, Value: com.companyname.automobile</span></span>
<span class="line"><span>[INFO] Parameter: package, Value: com.companyname.automobile</span></span>
<span class="line"><span>[INFO] Parameter: artifactId, Value: trucks</span></span>
<span class="line"><span>[INFO] Parameter: basedir, Value: C:\\MVN</span></span>
<span class="line"><span>[INFO] Parameter: version, Value: 1.0-SNAPSHOT</span></span>
<span class="line"><span>[INFO] project created from Old (1.x) Archetype in dir: C:\\MVN\\trucks</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] BUILD SUCCESSFUL</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Total time: 16 seconds</span></span>
<span class="line"><span>[INFO] Finished at: Tue Jul 17 11:00:00 IST 2012</span></span>
<span class="line"><span>[INFO] Final Memory: 20M/89M</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span></code></pre></div><p>现在进入 C:/MVN 目录，你将看到一个名为 trucks（由 artifactld 指定）的 java 应用工程。</p><p><img src="`+e+`" alt="Java web application project structure"></p><p>Maven 使用一个标准的目录架构，如上示例，我们可以理解以下的关键概念：</p><table tabindex="0"><thead><tr><th style="text-align:left;">文件夹结构</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">trucks</td><td style="text-align:left;">包含 src 文件夹和 pom.xml</td></tr><tr><td style="text-align:left;">src/main/webapp</td><td style="text-align:left;">包含 index.jsp 和 WEB-INF 文件夹.</td></tr><tr><td style="text-align:left;">src/main/webapp/WEB-INF</td><td style="text-align:left;">包含 web.xml</td></tr><tr><td style="text-align:left;">src/main/resources</td><td style="text-align:left;">包含 images / properties 文件。</td></tr></tbody></table><h2 id="pom-xml" tabindex="-1">POM.xml <a class="header-anchor" href="#pom-xml" aria-label="Permalink to &quot;POM.xml&quot;">​</a></h2><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">project</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xmlns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://maven.apache.org/POM/4.0.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   xmlns:xsi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   xsi:schemaLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://maven.apache.org/POM/4.0.0 </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://maven.apache.org/maven-v4_0_0.xsd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">modelVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;4.0.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">modelVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;com.companyname.automobile&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;trucks&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">packaging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;war&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">packaging</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.0-SNAPSHOT&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;trucks Maven Webapp&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;http://maven.apache.org&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;junit&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;junit&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;3.8.1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;test&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">finalName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;trucks&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">finalName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">project</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>如果仔细观察，Maven 还创建了一个示例 JSP 的源文件。</p><p>打开 <strong>C:\\ &gt; MVN &gt; trucks &gt; src &gt; main &gt; webapp &gt;</strong> 文件夹, 你将看到 index.jsp.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello World!&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="build-web-application" tabindex="-1">Build Web Application <a class="header-anchor" href="#build-web-application" aria-label="Permalink to &quot;Build Web Application&quot;">​</a></h2><p>打开终端，进入 C:\\MVN\\trucks 目录，然后执行如下 <strong>mvn</strong> 命令.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>C:\\MVN\\trucks&gt;mvn clean package</span></span></code></pre></div><p>Maven 将会开始构建此工程，日志输出如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[INFO] Scanning for projects...</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Building trucks Maven Webapp</span></span>
<span class="line"><span>[INFO]    task-segment: [clean, package]</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] [clean:clean {execution: default-clean}]</span></span>
<span class="line"><span>[INFO] [resources:resources {execution: default-resources}]</span></span>
<span class="line"><span>[WARNING] Using platform encoding (Cp1252 actually) to </span></span>
<span class="line"><span>copy filtered resources,i.e. build is platform dependent!</span></span>
<span class="line"><span>[INFO] Copying 0 resource</span></span>
<span class="line"><span>[INFO] [compiler:compile {execution: default-compile}]</span></span>
<span class="line"><span>[INFO] No sources to compile</span></span>
<span class="line"><span>[INFO] [resources:testResources {execution: default-testResources}]</span></span>
<span class="line"><span>[WARNING] Using platform encoding (Cp1252 actually) to </span></span>
<span class="line"><span>copy filtered resources,i.e. build is platform dependent!</span></span>
<span class="line"><span>[INFO] skip non existing resourceDirectory </span></span>
<span class="line"><span>C:\\MVN\\trucks\\src\\test\\resources</span></span>
<span class="line"><span>[INFO] [compiler:testCompile {execution: default-testCompile}]</span></span>
<span class="line"><span>[INFO] No sources to compile</span></span>
<span class="line"><span>[INFO] [surefire:test {execution: default-test}]</span></span>
<span class="line"><span>[INFO] No tests to run.</span></span>
<span class="line"><span>[INFO] [war:war {execution: default-war}]</span></span>
<span class="line"><span>[INFO] Packaging webapp</span></span>
<span class="line"><span>[INFO] Assembling webapp[trucks] in [C:\\MVN\\trucks\\target\\trucks]</span></span>
<span class="line"><span>[INFO] Processing war project</span></span>
<span class="line"><span>[INFO] Copying webapp resources[C:\\MVN\\trucks\\src\\main\\webapp]</span></span>
<span class="line"><span>[INFO] Webapp assembled in[77 msecs]</span></span>
<span class="line"><span>[INFO] Building war: C:\\MVN\\trucks\\target\\trucks.war</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] BUILD SUCCESSFUL</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span>
<span class="line"><span>[INFO] Total time: 3 seconds</span></span>
<span class="line"><span>[INFO] Finished at: Tue Jul 17 11:22:45 IST 2012</span></span>
<span class="line"><span>[INFO] Final Memory: 11M/85M</span></span>
<span class="line"><span>[INFO] -------------------------------------------------------------------</span></span></code></pre></div><h2 id="部署-web-应用" tabindex="-1">部署 Web 应用 <a class="header-anchor" href="#部署-web-应用" aria-label="Permalink to &quot;部署 Web 应用&quot;">​</a></h2><p>现在拷贝在 <strong>C:\\ &gt; MVN &gt; trucks &gt; target &gt;</strong> 文件夹下的 trucks.war 到你的 web 服务器的 webapp 目录下，并且重启 web 服务。</p><h2 id="测试-web-应用" tabindex="-1">测试 Web 应用 <a class="header-anchor" href="#测试-web-应用" aria-label="Permalink to &quot;测试 Web 应用&quot;">​</a></h2><p>使用 URL: <strong>http://&lt;server-name&gt;:&lt;port-number&gt;/trucks/index.jsp</strong> 来运行你的 Web 应用。</p><p>验证输出结果：</p><p><img src="`+t+'" alt="web page"></p>',28)]))}const y=a(l,[["render",h]]);export{o as __pageData,y as default};
