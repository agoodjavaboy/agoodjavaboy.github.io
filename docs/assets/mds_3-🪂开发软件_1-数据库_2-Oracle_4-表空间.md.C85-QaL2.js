import{_ as s,c as e,o as t,aF as i}from"./chunks/framework.CvyoTX4A.js";const r="/assets/996845e2e9149c029f678dd5b4bc3daa.C-s5lIkx.png",l="/assets/9915169e1b93ca8e757f6ebfba801c59.DqDe6Xo5.png",o="/assets/8a12814800856fb10001470380ae3349.D-e-XZV8.png",n="/assets/03d0cdd3d7efc096bd41b51e134269a4.Bhc6WlIS.png",p="/assets/001cbca7a65484d26e56a2a67c17d9a1.DYt5nmld.png",h="/assets/4cd9a58f66eb5431268917bfdebf91e4.Doa2v3_m.png",d="/assets/bc0033e80ad8ac6bfad4cdd668948759.D_oTa3ol.png",c="/assets/3251ee62c5424761e1500505417457b9.CRDLxwy3.png",u="/assets/image-20250317233027276._nzNVDMl.png",q=JSON.parse('{"title":"表空间","description":"","frontmatter":{},"headers":[],"relativePath":"mds/3-🪂开发软件/1-数据库/2-Oracle/4-表空间.md","filePath":"mds/3-🪂开发软件/1-数据库/2-Oracle/4-表空间.md"}'),b={name:"mds/3-🪂开发软件/1-数据库/2-Oracle/4-表空间.md"};function m(S,a,g,k,E,_){return t(),e("div",null,a[0]||(a[0]=[i('<h1 id="表空间" tabindex="-1">表空间 <a class="header-anchor" href="#表空间" aria-label="Permalink to &quot;表空间&quot;">​</a></h1><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><ol><li><p>Oracle数据库是通过表空间来存储物理表的，一个数据库实例可以有N个表空间，一个表空间下可以有N张表。</p></li><li><p>有了数据库，就可以创建表空间。</p></li><li><p>表空间(tablespace)是数据库的逻辑划分，每个数据库至少有一个表空间（称作SYSTEM表空间）。</p></li><li><p>为了便于管理和提高运行效率，可以使用一些附加表空间来划分用户和应用程序。</p><p>例如：USER表空间供一般用户使用，RBS表空间供回滚段使用。</p></li><li><p>一个表空间只能属于一个数据库。</p></li><li><p>表空间是数据库中最大的逻辑单位， SYSTEM和SYSAUX表空间是在创建数据库时创建的必须存在的表空间，还会有TEMP， USERS等 每个表空间是由一个或多个数据文件组成的，一个数据文件只能与一个表空间相关联 表空间的大小等于构成该表空间的所有数据文件大小之和</p></li></ol><p><img src="'+r+'" alt=""></p><h2 id="内置表空间" tabindex="-1">内置表空间 <a class="header-anchor" href="#内置表空间" aria-label="Permalink to &quot;内置表空间&quot;">​</a></h2><h3 id="sysaux表空间" tabindex="-1">SYSAUX表空间 <a class="header-anchor" href="#sysaux表空间" aria-label="Permalink to &quot;SYSAUX表空间&quot;">​</a></h3><p>​ SYSAUX表空间在Oracle Database 10g中引入,作为SYSTEM表空间的辅助表空间.以前一些使用独立表空间或系统表空间的数据库组件现在在SYSAUX表空间中创建.SYSAUX 表空间存放一些其他的 metadata 组件，如 OEM,Streams 等会默认存放在 SYSAUX 表空间里。通过分离这些组件和功能，SYSTEM表空间的负荷得以减轻.反复创建一些相关对象及组件引起SYSTEM表空间的碎片问题得以避免。</p><h3 id="system表空间" tabindex="-1">SYSTEM表空间 <a class="header-anchor" href="#system表空间" aria-label="Permalink to &quot;SYSTEM表空间&quot;">​</a></h3><p>​ SYSTEM表空间是Oracle创建数据库时候自动创建的，每个Oracle数据库都会有SYSTEM表空间，而且SYSTEM表空间总是要保持在联机模式下，因为其包含了数据库运行所要求的基本信息，如：数据字典、联机求助机制、所有回退段、临时段和自举段、所有的用户数据库实体、其它ORACLE软件产品要求的表等等。</p><h3 id="temp表空间" tabindex="-1">TEMP表空间 <a class="header-anchor" href="#temp表空间" aria-label="Permalink to &quot;TEMP表空间&quot;">​</a></h3><p>​ 临时表空间用来管理数据库排序操作以及用于存储临时表、中间排序结果等临时对象,当ORACLE里需要用到SORT的时候，并且当PGA中sort_area_size大小不够时，将会把数据放入临时表空间里进行排序。像数据库中一些操作： CREATE INDEX、 ANALYZE、SELECT DISTINCT、ORDER BY、GROUP BY、 UNION ALL、 INTERSECT、MINUS、SORT-MERGE JOINS、HASH JOIN等都可能会用到临时表空间。当操作完成后，系统会自动清理临时表空间中的临时对象，自动释放临时段。这里的释放只是标记为空闲、可以重用，其实实质占用的磁盘空间并没有真正释放。这也是临时表空间有时会不断增大的原因。临时表空间存储大规模排序操作(小规模排序操作会直接在RAM里完成，大规模排序才需要磁盘排序Disk Sort)和散列操作的中间结果.它跟永久表空间不同的地方在于它由临时数据文件（temporary files）组成的,而不是永久数据文件（datafiles）。临时表空间不会存储永久类型的对象，所以它不会也不需要备份。另外，对临时数据文件的操作不产生redo日志，不过会生成undo日志。</p><h3 id="undo表空间" tabindex="-1">UNDO表空间 <a class="header-anchor" href="#undo表空间" aria-label="Permalink to &quot;UNDO表空间&quot;">​</a></h3><p>​ UNDO表空间是Oracle特有的概念。undo表空间中会自动分配undo段，这些undo段用来保存事务中的DML语句的undo信息，也就是来保存数据在被修改之前的值。在rollback，实例恢复(前滚)，一致性读CR块的构造时会使用到undo信息。由于undo的引入，从而Oracle的select语句实现一致性读时，不需要任何锁。undo表空间和其它表空间有很多类似的地方：undo数据块也会被读到buffer cache缓存起来，修改时也会产生redo log，数据也会写回到undo表空间的磁盘上。所以崩溃后，undo块的buffer cache也会恢复过来。</p><h3 id="users表空间" tabindex="-1">USERS表空间 <a class="header-anchor" href="#users表空间" aria-label="Permalink to &quot;USERS表空间&quot;">​</a></h3><p>创建用户必须为其指定表空间，如果没有显性指定默认表空间，则指定为users表空间，此用户所有信息都会放入到users表空间中。</p><h2 id="表空间操作" tabindex="-1">表空间操作 <a class="header-anchor" href="#表空间操作" aria-label="Permalink to &quot;表空间操作&quot;">​</a></h2><h3 id="创建表空间school" tabindex="-1">创建表空间school <a class="header-anchor" href="#创建表空间school" aria-label="Permalink to &quot;创建表空间school&quot;">​</a></h3><p><img src="'+l+'" alt=""></p><h3 id="查看是否创建成功" tabindex="-1">查看是否创建成功 <a class="header-anchor" href="#查看是否创建成功" aria-label="Permalink to &quot;查看是否创建成功&quot;">​</a></h3><p><img src="'+o+'" alt=""></p><h3 id="修改表空间大小" tabindex="-1">修改表空间大小 <a class="header-anchor" href="#修改表空间大小" aria-label="Permalink to &quot;修改表空间大小&quot;">​</a></h3><p><img src="'+n+'" alt=""></p><p><strong>查看修改结果</strong></p><p><img src="'+p+'" alt=""></p><p><strong>添加文件</strong></p><p><img src="'+h+'" alt=""></p><p><strong>查看文件添加结果</strong></p><p><img src="'+d+'" alt=""></p><h2 id="表空间权限" tabindex="-1">表空间权限 <a class="header-anchor" href="#表空间权限" aria-label="Permalink to &quot;表空间权限&quot;">​</a></h2><p><strong>更改为只读：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> tablespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表空间名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> only;</span></span></code></pre></div><p><strong>更改为可读可写：</strong></p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> tablespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表空间名 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> write;</span></span></code></pre></div><h2 id="删除表空间" tabindex="-1">删除表空间 <a class="header-anchor" href="#删除表空间" aria-label="Permalink to &quot;删除表空间&quot;">​</a></h2><p><img src="'+c+'" alt=""></p><p><strong>检测删除结果</strong></p><p><img src="'+u+'" alt="image-20250317233027276"></p>',37)]))}const T=s(b,[["render",m]]);export{q as __pageData,T as default};
