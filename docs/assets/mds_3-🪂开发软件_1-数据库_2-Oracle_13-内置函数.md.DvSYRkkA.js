import{_ as d,c as r,o as a,aF as l}from"./chunks/framework.CvyoTX4A.js";const e="/assets/1568082883474.slcZO8Vw.png",u=JSON.parse('{"title":"内置函数","description":"","frontmatter":{},"headers":[],"relativePath":"mds/3-🪂开发软件/1-数据库/2-Oracle/13-内置函数.md","filePath":"mds/3-🪂开发软件/1-数据库/2-Oracle/13-内置函数.md"}'),i={name:"mds/3-🪂开发软件/1-数据库/2-Oracle/13-内置函数.md"};function s(h,t,o,n,E,O){return a(),r("div",null,t[0]||(t[0]=[l('<h1 id="内置函数" tabindex="-1">内置函数 <a class="header-anchor" href="#内置函数" aria-label="Permalink to &quot;内置函数&quot;">​</a></h1><h2 id="oracle" tabindex="-1">Oracle <a class="header-anchor" href="#oracle" aria-label="Permalink to &quot;Oracle&quot;">​</a></h2><h3 id="dual虚表" tabindex="-1">dual虚表 <a class="header-anchor" href="#dual虚表" aria-label="Permalink to &quot;dual虚表&quot;">​</a></h3><ul><li>dual是一个虚拟表,用来构成select的语法规则.</li><li>当要查询一个数据但是不需要任何表的时候,就可以使用dual表.比如在做函数的测试时,或者获取当前系统参数时,就可以使用dual表.</li></ul><h3 id="sysdate当前时间" tabindex="-1">sysdate当前时间 <a class="header-anchor" href="#sysdate当前时间" aria-label="Permalink to &quot;sysdate当前时间&quot;">​</a></h3><ul><li>返回数据库当前的时间.</li></ul><p><img src="'+e+`" alt="156808283474"></p><h3 id="单行函数" tabindex="-1">单行函数 <a class="header-anchor" href="#单行函数" aria-label="Permalink to &quot;单行函数&quot;">​</a></h3><p><strong>只能操作一行数据,返回一个结果.</strong>（每行都有自己的结果）</p><h4 id="字符函数" tabindex="-1">字符函数 <a class="header-anchor" href="#字符函数" aria-label="Permalink to &quot;字符函数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>函数</th><th>说明</th><th>实例</th><th>结果</th></tr></thead><tbody><tr><td>ASCII(x)</td><td>返回字符x的ASCII码。</td><td>SELECT ASCII(&#39;a&#39;) FROM DUAL</td><td>97</td></tr><tr><td>CONCAT(x,y)</td><td>连接字符串x和y。</td><td>SELECT CONCAT(&#39;Hello&#39;, &#39; world&#39;) FROM DUAL</td><td>Hello world</td></tr><tr><td>INSTR(x, str. Start, n)</td><td>在x中查找str，可以指定从start开始，也可以指定从第n次开始。</td><td>SELECT INSTR(&#39;Hello world&#39;，&#39;or&#39;) FROM DUAL</td><td>8</td></tr><tr><td>LENGTH(x)</td><td>返回x的长度。</td><td>SELECT LENGTH(&#39;Hello&#39;) FROM DUAL</td><td>5</td></tr><tr><td>LOWER(x)</td><td>x转换为小写。</td><td>SELECT LOWER(&#39;hElLO&#39;) FROM DUAL;</td><td>hello</td></tr><tr><td>UPPER(x)</td><td>x转换为大写。</td><td>SELECT UPPER(&#39;hello&#39;) FROM DUAL</td><td>HELLO</td></tr><tr><td>LTRIM(x,trim_str)</td><td>把x的左边截去trim_str字符串，缺省截去空格。</td><td>SELECT LTRIM(&#39;===HELLO===&#39;, &#39;=&#39;) FROM DUAL</td><td>HELLO===</td></tr><tr><td>RTRIM(x,trim_str)</td><td>把x的右边截去trim_str字符串，缺省截去空格。</td><td>SELECT RTRIM(&#39;===HELLO===&#39;, &#39;=&#39;) FROM DUAL</td><td>===HELLO</td></tr><tr><td>TRIM(trim_str FROM x)</td><td>把x的两边截去trim_str字符串，缺省截去空格。</td><td>SELECT TRIM(&#39;=&#39; FROM &#39;===HELLO===&#39;) FROM DUAL</td><td>HELLO</td></tr><tr><td>REPLACE(x,old,new)</td><td>在x中查找old，并替换为new。</td><td>SELECT REPLACE(&#39;ABCDE&#39;,&#39;CD&#39;,&#39;AAA&#39;) FROM DUAL</td><td>ABAAAE</td></tr><tr><td>SUBSTR(x, start ,length)</td><td>返回x的字串，从staart处开始，截取length个字符，缺省length，默认到结尾。</td><td>SELECT SUBSTR(&#39;ABCDE&#39;,2,3) FROM DUAL</td><td>BCD</td></tr></tbody></table><h4 id="数字函数" tabindex="-1">数字函数 <a class="header-anchor" href="#数字函数" aria-label="Permalink to &quot;数字函数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>函数</th><th>说明</th><th>实例</th></tr></thead><tbody><tr><td>ABS(x)</td><td>x绝对值</td><td>ABS(-3)=3</td></tr><tr><td>ACOS(x)</td><td>x的反余弦</td><td>ACOS(1)=0</td></tr><tr><td>COS(x)</td><td>余弦</td><td>COS(1)=1.57079633</td></tr><tr><td>CEIL(x)</td><td>大于或等于x的最小整数</td><td>CEIL(5.4)=6</td></tr><tr><td>FLOOR(x)</td><td>小于或等于x的最大整数</td><td>FLOOR(5.8)=5</td></tr><tr><td>LOG(x,y)</td><td>x为底y的对数</td><td>LOG(2,4)=2</td></tr><tr><td>MOD(x,y)</td><td>x除以y的余数</td><td>MOD(8,3)=2</td></tr><tr><td>POWER(x,y)</td><td>x的y次幂</td><td>POWER(2,3)=8</td></tr><tr><td>ROUND(x,y)</td><td>x在第y小数位四舍五入</td><td>ROUND(3.456,2)=3.46</td></tr><tr><td>SQRT(x)</td><td>x的平方根</td><td>SQRT(4)=2</td></tr><tr><td>TRUNC(x,y)</td><td>x在第y位截断</td><td>TRUNC(3.456,2)=3.45</td></tr><tr><td>ROUND(x,y)</td><td>四舍五入:当y不存在,默认为0.y为正整数表示保留几位小数,y为负整数,表示四舍五入到小数点前几位.</td><td>ROUND(3.56)=4</td></tr><tr><td>TRUNC(x,y)</td><td>直接截取,不四舍五入:当y不存在,默认为0.y为正整数表示保留几位小数,y为负整数,表示截取到小数点前几位.</td><td>TRUNC (3.56)=3</td></tr></tbody></table><h3 id="转换函数" tabindex="-1">转换函数 <a class="header-anchor" href="#转换函数" aria-label="Permalink to &quot;转换函数&quot;">​</a></h3><p><strong>转换函数将值从一种数据类型转换为另外一种数据类型</strong></p><p><strong>当往数据库中添加数据或者取出数据的时候,如果对数据类型有要求就要转换成相应的格式后操作.</strong></p><ul><li><p>TO_CHAR(d|n,fmt]):把日期和数字转换为制定格式的字符串。</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 将系统时间转换为字符串形式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TO_CHAR(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SYSDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY&quot;年&quot;MM&quot;月&quot;DD&quot;日&quot; HH24:MI:SS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;date&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DUAL;</span></span></code></pre></div></li><li><p>TO_DATE(x ,fmt):把一个字符串以fmt格式转换为一个日期类型.</p></li><li><p>TO_NUMBER(x,fmt):把一个字符串以fmt格式转换为一个数字.(如果一个字符中全部都是数字,可以直接进行数学运算.)</p></li></ul><p><strong>格式表：</strong></p><table tabindex="0"><thead><tr><th>格式</th><th>含义</th></tr></thead><tbody><tr><td>YYYY</td><td>四位表示的年份</td></tr><tr><td>YYY，YY，Y</td><td>年份的最后三位、两位或一位，缺省为当前世纪</td></tr><tr><td>IYYY</td><td>ISO标准的四位年份</td></tr><tr><td>MM</td><td>01~12的月份编号</td></tr><tr><td>MON</td><td>缩写字符集表示</td></tr><tr><td>MONTH</td><td>全拼字符集表示的月份，右边用空格填补</td></tr><tr><td>Q</td><td>季度</td></tr><tr><td>W</td><td>当月第几周</td></tr><tr><td>WW</td><td>当年第几周</td></tr><tr><td>IW</td><td>ISO标准的年中的第几周</td></tr><tr><td>D</td><td>当周第几天</td></tr><tr><td>DD</td><td>当月第几天</td></tr><tr><td>DDD</td><td>当年第几天</td></tr><tr><td>DY</td><td>缩写字符集表示</td></tr><tr><td>DAY</td><td>全拼字符集表示的天 如（星期六）</td></tr><tr><td>HH，HH12</td><td>一天中的第几个小时，12进制表示法</td></tr><tr><td>HH24</td><td>一天中的第几个小时，取值为00~23</td></tr><tr><td>MI</td><td>一小时中的分钟</td></tr><tr><td>SS</td><td>一分钟中的秒</td></tr><tr><td>SSSS</td><td>从午夜开始过去的秒数</td></tr></tbody></table><h3 id="日期函数" tabindex="-1">日期函数 <a class="header-anchor" href="#日期函数" aria-label="Permalink to &quot;日期函数&quot;">​</a></h3><table tabindex="0"><thead><tr><th>函数名</th><th>作用</th></tr></thead><tbody><tr><td>ADD_MONTHS(d,n)</td><td>在日期d上添加指定的月数n,返回计算后的结果.</td></tr><tr><td>LAST_DAY(d)</td><td>返回指定日期当月的最后一天.</td></tr><tr><td>ROUND(d,fmt)</td><td>返回一个以fmt威格士的四舍五入日期值,d时日期,fmt时格式模型.</td></tr><tr><td>TRUNC(d,fmt)</td><td>与ROUND相似,但是不做舍入计算,直接截取.</td></tr><tr><td>EXTRACT(fmt FROM d)</td><td>提取日期中的特定部分。</td></tr></tbody></table><p><strong>ROUND(d,fmt)</strong></p><ul><li>fmt=YEAR:舍入到某年的1月1日,前半年舍去,后半年作为下一年.</li><li>fmt=MONTH:舍入到 某年的1日,前半月舍去,后半月作为下一月.</li><li>默认=DDD:月中的某一天,最靠近的天,前半天舍去,后半天作为第二天.</li><li>fmt=DAY:舍入到最近的周的周日,上半周舍去,下半周作为下周周日.</li></ul><p><strong>EXTRACT(fmt FROM d)</strong></p><ul><li>fmt为YEAR、MONTH、DAY、HOUR、MINUTE、SECOND。</li><li>其中YEAR、MONTH、DAY可以为DATE类型匹配，也可以与TIMESTAMP类型匹配.</li><li>但是HOUR、MINUTE、SECOND必须与TIMESTAMP类型匹配。</li><li>HOUR匹配的结果中没有加上时区，因此在中国运行的结果小8小时。</li></ul><h3 id="判断空函数" tabindex="-1">判断空函数 <a class="header-anchor" href="#判断空函数" aria-label="Permalink to &quot;判断空函数&quot;">​</a></h3><ul><li>NVL(x,value):如果x为空，返回value，否则返回x。</li><li>NVL2(x,value1,value2):如果x非空，返回value1，否则返回value2。</li></ul><h3 id="聚合函数-组函数" tabindex="-1">聚合函数(组函数) <a class="header-anchor" href="#聚合函数-组函数" aria-label="Permalink to &quot;聚合函数(组函数)&quot;">​</a></h3><p><strong>聚合函数同时对一组数据进行操作，返回一行结果，比如计算一组数据的总和，平均值等。</strong></p><table tabindex="0"><thead><tr><th>名称</th><th>作用</th><th>语法</th></tr></thead><tbody><tr><td>AVG</td><td>平均值</td><td>AVG(表达式)</td></tr><tr><td>SUM</td><td>求和</td><td>SUM(表达式)</td></tr><tr><td>MIN、MAX</td><td>最小值、最大值</td><td>MIN(表达式)、MAX(表达式)</td></tr><tr><td>COUNT</td><td>数据统计</td><td>COUNT(表达式)</td></tr></tbody></table><ul><li>count函数中可以填入列名或者<code>*</code>和<code>1</code>.</li><li>填入列名时,不会统计<code>null</code>值所在的行,只会统计存在数据的行数.</li><li><code>*</code>和<code>1</code>都表示所有的行.</li></ul>`,31)]))}const p=d(i,[["render",s]]);export{u as __pageData,p as default};
