import{_ as e,c as a,o as r,aF as d}from"./chunks/framework.CvyoTX4A.js";const _=JSON.parse('{"title":"接口ServletConfig","description":"","frontmatter":{},"headers":[],"relativePath":"mds/1-👾后端开发/1-Java/2-Java Web/5-ServletConfig.md","filePath":"mds/1-👾后端开发/1-Java/2-Java Web/5-ServletConfig.md"}'),o={name:"mds/1-👾后端开发/1-Java/2-Java Web/5-ServletConfig.md"};function n(l,t,i,c,v,s){return r(),a("div",null,t[0]||(t[0]=[d('<h1 id="接口servletconfig" tabindex="-1">接口ServletConfig <a class="header-anchor" href="#接口servletconfig" aria-label="Permalink to &quot;接口ServletConfig&quot;">​</a></h1><ul><li>servlet容器用于在初始化期间向servlet传递信息的servlet配置对象。</li></ul><table tabindex="0"><thead><tr><th>方法返回值类型</th><th>方法名及描述</th></tr></thead><tbody><tr><td><code>java.lang.String</code></td><td><code>getInitParameter(java.lang.String name)</code> 获取具有给定名称的初始化参数的值。</td></tr><tr><td><code>java.util.Enumeration&lt;java.lang.String&gt;</code></td><td><code>getInitParameterNames()</code> 以“String”对象的“枚举”形式返回servlet初始化参数的名称，如果servlet没有初始化参数，则返回空的“枚举”。</td></tr><tr><td><code>ServletContext</code></td><td><code>getServletContext()</code> 返回调用者执行的‘ServletContext’的引用。</td></tr><tr><td><code>java.lang.String</code></td><td><code>getServletName()</code> 返回此servlet实例的名称。</td></tr></tbody></table>',3)]))}const S=e(o,[["render",n]]);export{_ as __pageData,S as default};
