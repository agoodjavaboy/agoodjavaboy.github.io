import{_ as i,c as a,o as t,aF as e}from"./chunks/framework.CvyoTX4A.js";const n="/assets/1584080612405.BAxqkcH-.png",g=JSON.parse('{"title":"Cookie","description":"","frontmatter":{},"headers":[],"relativePath":"mds/1-👾后端开发/1-Java/2-Java Web/7-Cookie.md","filePath":"mds/1-👾后端开发/1-Java/2-Java Web/7-Cookie.md"}'),k={name:"mds/1-👾后端开发/1-Java/2-Java Web/7-Cookie.md"};function l(h,s,p,d,o,r){return t(),a("div",null,s[0]||(s[0]=[e('<h1 id="cookie" tabindex="-1">Cookie <a class="header-anchor" href="#cookie" aria-label="Permalink to &quot;Cookie&quot;">​</a></h1><h2 id="cookie是什么" tabindex="-1">Cookie是什么 <a class="header-anchor" href="#cookie是什么" aria-label="Permalink to &quot;Cookie是什么&quot;">​</a></h2><ul><li><p>存储在浏览器上的（硬盘）一个字符串形式的键值对。</p></li><li><p>服务器可以借助Cookie向浏览器存储字符标记，通常用来做免登录操作。</p></li><li><p>浏览器的Cookie信息将在request对象中发送到服务器，可以通过response对象向浏览器添加Cookie。</p></li><li><p>网站只能在浏览器上获得自己添加的Cookie，其他网站的Cookie无法获得。</p></li><li><p>在java中，用一个Cookie类来描述Cookie。</p></li><li><p>cookie有名称、单个值和可选属性，如注释、路径和域限定符、最大存活时长和版本号。</p></li><li><p>一些Web浏览器在处理可选属性方面有缺陷，所以要谨慎使用它们来改进servlet的互操作性。</p></li><li><p>servlet通过使用HttpServletResponse的addCookie方法向浏览器发送cookie，该方法将字段添加到HTTP响应头中，以便一次向浏览器发送一个cookie。</p></li><li><p>浏览器通过向HTTP请求头添加字段向servlet返回cookie。可以使用HttpServletRequest的getCookies方法从请求中检索cookie。多个cookie可能具有相同的名称但不同的路径属性。</p></li><li><p>Cookie虽然是用来存储用户信息的，但是一般不会存储敏感信息，就算有也加密存储。</p></li></ul><p><img src="'+n+`" alt="1584080612405"></p><table tabindex="0"><thead><tr><th>构造方法</th></tr></thead><tbody><tr><td><strong>Cookie</strong>(java.lang.String name, java.lang.String value)<br>通过键值，创建一个新的Cookie对象。</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Method Summary</th><th></th></tr></thead><tbody><tr><td><code> java.lang.String</code></td><td><code>getComment()</code> 返回描述此cookie用途的注释，如果该cookie没有注释，则返回null。</td></tr><tr><td><code> java.lang.String</code></td><td><code>getDomain()</code> 获取此Cookie的域名.</td></tr><tr><td><code> int</code></td><td><code>getMaxAge()</code> 获取此Cookie的最大年龄(以秒为单位)。</td></tr><tr><td><code> java.lang.String</code></td><td><code>getName()</code> 返回cookie的key值。</td></tr><tr><td><code> java.lang.String</code></td><td><code>getPath()</code> 返回浏览器返回此cookie的服务器上的路径。</td></tr><tr><td><code> boolean</code></td><td><code>getSecure()</code> 如果浏览器仅通过安全协议发送cookie，则返回“true”;如果浏览器可以使用任何协议发送cookie，则返回“false”。</td></tr><tr><td><code> java.lang.String</code></td><td><code>getValue()</code> 获得Cookie的value值。</td></tr><tr><td><code> int</code></td><td><code>getVersion()</code> 返回此cookie遵守的协议的版本。</td></tr><tr><td><code> boolean</code></td><td><code>isHttpOnly()</code> 检查此Cookie是否被标记为<em>HttpOnly</em>。</td></tr><tr><td><code> void</code></td><td><code>setComment(java.lang.String purpose)</code> 指定描述cookie用途的注释。</td></tr><tr><td><code> void</code></td><td><code>setDomain(java.lang.String domain)</code> 指定应该在其中显示此cookie的域。</td></tr><tr><td><code> void</code></td><td><code>setHttpOnly(boolean isHttpOnly)</code> 将此Cookie标记或取消标记为HttpOnly。</td></tr><tr><td><code> void</code></td><td><code>setMaxAge(int expiry)</code> 设置此Cookie的最大年龄(以秒为单位)。</td></tr><tr><td><code> void</code></td><td><code>setPath(java.lang.String uri)</code> 为客户端应该返回的cookie指定一个路径。</td></tr><tr><td><code> void</code></td><td><code>setSecure(boolean flag)</code> 指示浏览器是否只应使用安全协议(如HTTPS或SSL)发送cookie。</td></tr><tr><td><code> void</code></td><td><code>setValue(java.lang.String newValue)</code> 为此Cookie分配一个新值。</td></tr><tr><td><code> void</code></td><td><code>setVersion(int v)</code> 设置此cookie遵守的cookie协议的版本。</td></tr></tbody></table><h2 id="cookie的操作" tabindex="-1">Cookie的操作 <a class="header-anchor" href="#cookie的操作" aria-label="Permalink to &quot;Cookie的操作&quot;">​</a></h2><h3 id="存储cookie" tabindex="-1">存储Cookie <a class="header-anchor" href="#存储cookie" aria-label="Permalink to &quot;存储Cookie&quot;">​</a></h3><ul><li>借助response对象存储Cookie。</li><li>使用有参的构造函数传入key和value值即可创建个Cookie。</li><li>Cookie的最大年龄有三种可填写的值： <ul><li>0：默认，跟随浏览器的关闭而死亡，如果浏览器不关闭就一直活着（一次会话）。</li><li>-N：立即消除此Cookie。</li><li>+N：从发送到服务器开始计算可以存活多少秒。</li></ul></li></ul><blockquote><p>一次会话：浏览器与服务器建立连接是会话的开始，服务器或者浏览器单方面掉线或者关闭叫做会话的结束。</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WebServlet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">urlPatterns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/TestCookieServlet.do&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestCookieServlet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpServlet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpServletRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, HttpServletResponse </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ServletException, IOException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		Cookie c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//创建Cookie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		c.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMaxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//赋最大生命</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addCookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//存储Cookie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="取出cookie" tabindex="-1">取出Cookie <a class="header-anchor" href="#取出cookie" aria-label="Permalink to &quot;取出Cookie&quot;">​</a></h3><ul><li>根据request的getCookie方法来获得所有的Cookie（由本服务器发送给浏览器的Cookie）。</li><li>遍历Cookie数组，从里面找到相应的key，从而找到响应的value。</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WebServlet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">urlPatterns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/TestCookieServlet.do&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestCookieServlet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HttpServlet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpServletRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, HttpServletResponse </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ServletException, IOException {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] cs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCookies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获得所有的Cookie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cookie c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cs){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//遍历所有Cookie</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//任意一个Cookie的Name为username，则取出value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				String value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;username = &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">			if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//任意一个Cookie的Name为password，则取出value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				String value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password = &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>在进行请求重定向时，很可能会出现Cookie存不进去或者取不到值的情况，所以要在重定向的时候添加对域名和路径的设置。</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Cookie c1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,name);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//创建Cookie</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setMaxAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置生命长度</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置访问路径</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;localhost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//设置域名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addCookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c1);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//存入Cookie</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//经过以上操作，重定向也可以存储和取出Cookie</span></span></code></pre></div>`,17)]))}const c=i(k,[["render",l]]);export{g as __pageData,c as default};
