import{_ as t,C as p,c as e,o as h,j as s,aF as l,a,G as k,w as r}from"./chunks/framework.CvyoTX4A.js";const d="/assets/1568096799943.BW9ZU2uH.png",o="/assets/1568172211999.BrWTb-IG.png",g="/assets/image-20250317233134894.B_mWT75v.png",A=JSON.parse('{"title":"分组","description":"","frontmatter":{},"headers":[],"relativePath":"mds/3-🪂开发软件/1-数据库/2-Oracle/14-分组.md","filePath":"mds/3-🪂开发软件/1-数据库/2-Oracle/14-分组.md"}'),E={name:"mds/3-🪂开发软件/1-数据库/2-Oracle/14-分组.md"};function y(u,i,c,m,b,_){const n=p("font");return h(),e("div",null,[i[7]||(i[7]=s("h1",{id:"分组",tabindex:"-1"},[a("分组 "),s("a",{class:"header-anchor",href:"#分组","aria-label":'Permalink to "分组"'},"​")],-1)),s("ul",null,[i[2]||(i[2]=s("li",null,[s("p",null,"根据列中相同的数据,将多行合并成一行.")],-1)),i[3]||(i[3]=s("li",null,[s("p",null,[a("借助"),s("code",null,"group by"),a("关键字来实现对某列数据的合并分组.")])],-1)),i[4]||(i[4]=s("li",null,[s("p",null,[a("语法:"),s("code",null,"select 列名 from 表名 group by 列名;")])],-1)),s("li",null,[k(n,{color:"red"},{default:r(()=>i[0]||(i[0]=[a("**(Oracle特有)**在select后出现的列名,要在group by后出现:")])),_:1}),i[1]||(i[1]=l(`<div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 错误示范</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employee_id,job_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> job_id;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 正确示范</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> job_id,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> job_id;</span></span></code></pre></div>`,1))]),i[5]||(i[5]=s("li",null,[s("p",null,"分组之后,可以使用聚合函数(组函数)对分组后的每组数据进行计算.")],-1)),i[6]||(i[6]=s("li",null,[s("p",null,"当语句中存在select/from/where/order by/group by时,执行顺序:"),s("ul",null,[s("li",null,"from:确定从哪个表中找到数据"),s("li",null,"where:对所有的数据进行筛选"),s("li",null,"group by:对筛选后结果进行分组"),s("li",null,"select :将指定的列查询出来"),s("li",null,"order by:对结果进行排序")])],-1))]),i[8]||(i[8]=l(`<div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 示例:求出各部门中的最小工资,并按部门人数降序排序.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> job_id,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> job_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">order by</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">desc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><img src="`+d+`" alt="1568096799943"></p><ul><li><p>如果在group by后面添加两个列名,表示两列中的数据组合不重复的行.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 查各个部门的各个工作的最高工资</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> department_id,job_id,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(salary) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> department_id,job_id</span></span></code></pre></div><p><img src="`+o+`" alt="156817221999"></p></li></ul><h2 id="having分组后判断" tabindex="-1">having分组后判断 <a class="header-anchor" href="#having分组后判断" aria-label="Permalink to &quot;having分组后判断&quot;">​</a></h2><ul><li><p>分组前可以使用where进行判断.</p></li><li><p>分组之后的结构,可以使用<code>having</code>进行判断.</p></li><li><p>where无法对分组后的结构进行判断!如果没有分组,having也不能存在.</p></li><li><p>语法:<code>select 列名 from 表名 where 条件 group by 列名 having 条件;</code></p></li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 示例:查询所有工作中,不是一个人在奋斗的工作ID!</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> job_id,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> job_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">having</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p><img src="`+g+'" alt="image-20250317233134894"></p>',7))])}const D=t(E,[["render",y]]);export{A as __pageData,D as default};
